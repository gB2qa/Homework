1) Что такое Тест дизайн?	
   Тест дизайн – это этап процесса тестирования ПО, на котором проектируются и создаются тестовые случаи (тест кейсы), в соответствии с определёнными ранее критериями качества и целями тестирования.
2) Для чего нужны Техники тест дизайна?	
    1. Минимизировать количество тестов, необходимых для нахождения большинства серьезных ошибок. Мы может придумать столько тестов, сколько не в состоянии будем выполнить. Поэтому перед разработчиками тестов всегда стоит задача – сохранить эффективность тестов (то есть их способность обнаруживать серьезные ошибки) без увеличения их числа
    2. Придумать тесты, которые обнаружат наиболее серьезные ошибки продукта. Да, мы можем придумывать тесты, которые находят 
несерьезные ошибки, но тогда тестирование будет неэффективным.
3) Какие знаете техники черного ящика?/Опишите их.	
    Классы эквивалентности (Equivalence class) – это набор входных (или выходных) данных ПО, которые обрабатываются программой по одному алгоритму или приводят к одному результату 
    Анализ граничных значений (Boundary Value Analysis) - это техника проверки поведения продукта на крайних (граничных) значениях входных данных
    Тестирование состояний и переходов (State transition testing) изучает, как система переходит из одного состояния в другое в ответ на события
    Тестирование по сценариям использования - это подход, при котором система тестируется на основе реальных пользовательских сценариев, которые описывают, как люди взаимодействуют с программой
    Тестирование таблицы решений - техника тестирования методом черного ящика, в которой тестовые сценарии проектируются для проверки комбинаций условий и действий, отраженных в таблице решений
    Техника причина/следствие (Cause/Effect – CE) - этот метод используется в тестировании для определения комбинаций условий (причин), которые могут привести к определенному результату (следствию) в системе
    Исчерпывающее тестирование -  это метод, применяемый при разработке ПО, который обеспечивает проверку всех возможных комбинаций в наборе данных
    Комбинаторные техники тест-дизайна — это методы, которые используются для создания эффективных наборов тестов, чтобы покрыть максимальное количество возможных комбинаций входных параметров с минимальным количеством тестов. Эти методы особенно полезны, когда у тестируемой системы есть множество входных переменных, каждая из которых может принимать несколько значений
    Комбинаторные техники : 
      Попарное тестирование - техника тест-дизайна методом черного ящика, при которой тест-кейсы создаются таким образом, чтобы выполнить все возможные отдельные комбинации каждой пары входных параметров
      Техника базового выбора (Base Choice) — одна из комбинаторных техник тест-дизайна, которая ориентирована на выбор базового набора тестовых значений для каждой переменной, а затем создание тестовых случаев путем изменения только одной переменной за раз, оставляя остальные на базовом уровне
      Тестирование каждого выбора (EC - Each choice testing) -  эта стратегия требует, чтобы каждое значение каждого параметра было включено по крайней мере в один тестовый пример
      Тестирование ортогональных массивов (OAT) это метод тестирования программного обеспечения, который использует ортогональные массивы для создания тестовых примеров. Этот подход статистического тестирования особенно полезен, когда тестируемая система имеет огромные объемы входных данных
4) Какие знаете техники белого ящика?/Опишите их	
   Покрытие операторов (statement coverage) измеряет, какие операторы программы были выполнены хотя бы один раз в ходе тестирования
   Покрытие решений (decision coverage) - это метод тестирования программ, который проверяет, чтобы каждая возможная ветвь решения в коде была выполнена хотя бы один раз
   Покрытие условий (condition coverage) - это тип тестирования «белого ящика», который проверяет все условные выражения в программе для всех возможных результатов условий
